@model ICP_ABC.Areas.Account.Models.RegisterViewModel
@{
                /**/

                /**/

                ViewBag.Title = "Register";
}
<style>

    body {
        font-weight: 500;
        background-color: aliceblue;
        /*background-image: url(../../Content/Images/vehdb4tur0fg6yphaiumv2bmtplollhqll0gvubgxt58t7znz43m5enjos1cxcdn-.jpg );*/
    }
</style>
<h2>User Profile Setup: (Create) </h2>
@*<form method="post" action="@Url.Action("REgister", "Account")">*@
@using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new
{
    @class = "form-horizontal",
    role = "form",
    autocomplete = "off",
    onload = "myFunction()",
    style = "margin-top:50px"
}))
{
    <div style="margin-bottom:70px;">

        @Html.AntiForgeryToken()
        <p class="text-danger">@Html.ValidationSummary(true)</p>
        <div class="row">
            <div class="form-group col-md-4 ">
                <label for="inputEmail4"> Code</label>
                @*@Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", Value = ViewData["currr"], @readonly = "readonly", Text = ViewData["currr"] } })*@
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.Code, new { @class = "form-control form-control-sm", Value = ViewData["LastCode"], text = ViewData["LastCode"], @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4 ">
                <label for="inputEmail4">Password</label>
                @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="col-md-9">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-sm", id = "pass" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="inputPassword4">ConfirmPassword</label>
                @*@Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="col-md-9">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                <label for="inputPassword4">Name</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control form-control-sm username", id = "username" })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="inputPassword4">Email</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-sm", placeholder = "name@example.com" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="inputPassword4">Full Name</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="form-group col-md-4  mb-3">
                <label for="inputEmail4"> Branch </label><br />
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.BranchID, ViewData["Branches"] as SelectList, "Please select one", new { @class = "form-control form-control-sm " })
                    @Html.ValidationMessageFor(m => m.BranchID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="inputPassword4">Postion</label><br />
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.PositionID, ViewData["Positions"] as SelectList, "Please select one", new { @class = "form-control form-control-sm " })
                    @Html.ValidationMessageFor(m => m.PositionID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="dropdown col-md-4">
                <label for="inputPassword4">Group</label><br />
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.GroupID, ViewData["Groups"] as SelectList, "Please select one", new { @class = "form-control form-control-sm " })
                    @Html.ValidationMessageFor(m => m.GroupID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="inputPassword4">Close Due Date</label><br />
                <div class="col-md-9">
                    @Html.Editor("Close Due Date", new { htmlAttributes = new { @class = "form-control form-control-sm  ", Value = ViewData["CloseDueDate"], text = ViewData["CloseDueDate"], @readonly = "readonly" } })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="inputPassword4">Expire Date</label><br />
                <div class="col-md-9">
                    @Html.Editor("Expire Date", new { htmlAttributes = new { @class = "form-control form-control-sm  ", Value = ViewData["expiredate"], text = ViewData["expiredate"], @readonly = "readonly" } })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="inputPassword4">Branch Right&nbsp;&nbsp;UnBlock Right</label><br />

                <div class="col-md-9" style="display:inline">
                    @Html.CheckBoxFor(model => model.BranchRight, new { htmlAttributes = new { @class = "form-control form-control-sm" } })

                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.CheckBoxFor(model => model.UnBlockRight, new { htmlAttributes = new { @class = "form-control form-control-sm" } })

                </div>
            </div>
            <div class="form-group col-md-4">

            </div>
        </div>
    </div>
    <div class="ButtonsControl">

        <div class="text-center" style="padding-top:15px;">
            <div class="col-md-3"></div>
            <div class="btn-group col-md-5" role="group" aria-label="Basic example">
                <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Apply</button>
                <a href="~/Account/Account/Index" class="btn btn-primary"><i class="fa fa-times-circle"></i> Cancel</a>
            </div>
        </div>
    </div>
}
}
@*</form>*@

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        setTimeout(function () {
            document.getElementById("username").value = "";
            document.getElementById("pass").value = "";
            // var x = document.getElementById("username").value;
            // alert(x);
        }, 900);



        $(function () {


            //   normal dropdown
            $(".ddlist").chosen({
                //  disable_search_threshold: 1
            });
        });
    </script>
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
