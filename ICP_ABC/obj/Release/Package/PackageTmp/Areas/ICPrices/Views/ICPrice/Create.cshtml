@model ICP_ABC.Areas.ICPrices.Models.CreateViewModel
@{ ViewBag.Title = "ICPrice Setup";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string servername = System.Web.Configuration.WebConfigurationManager.AppSettings["servername_URL"];
}
<style>

    body {
        font-weight: 500;
        background-color: aliceblue;
        /*background-image: url(../../Content/Images/vehdb4tur0fg6yphaiumv2bmtplollhqll0gvubgxt58t7znz43m5enjos1cxcdn-.jpg );*/
    }
</style>
<h2>ICPrice Setup: (Create)</h2>
@using (Html.BeginForm("Create", "ICPrice", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", style = "margin-top:50px" }))
{



    <div style="margin-bottom:70px;">
        @Html.AntiForgeryToken()
        <p class="text-danger"> @Html.ValidationSummary(true)</p>
        <div class="horizontal">
            <div class="form-group col-md-5 ">
                <label for="inputEmail4">Code</label>
                @*@Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", Value = ViewData["currr"], @readonly = "readonly", Text = ViewData["currr"] } })*@
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.Code, new { @class = "form-control form-control-sm", Value = ViewData["LastCode"], ReadOnly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-5 ">
                <label for="inputEmail4">FundName</label>
                @*@Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", Value = ViewData["currr"], @readonly = "readonly", Text = ViewData["currr"] } })*@
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.FundId, ViewData["Funds"] as SelectList, "Select Fund", new { @class = "form-control form-control-sm grpdrpdwn", id = "FundId" })
                    @Html.ValidationMessageFor(m => m.FundId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-5 ">
                <label for="inputEmail4"> Date</label>
                @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.Date, "", new { @class = "form-control form-control-sm", id = "Date", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-5 ">
                <label for="inputEmail4"> ProcessingDate</label>
                @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.ProcessingDate, "", new { @class = "form-control form-control-sm", id = "PDate", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.ProcessingDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-5 ">
                <label for="inputEmail4">Price</label>
                @*@Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", Value = ViewData["currr"], @readonly = "readonly", Text = ViewData["currr"] } })*@
                <div class="col-md-7">
                    @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "Price" } })
                    @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="ButtonsControl">

        <div class="text-center" style="padding-top:15px;">
            <div class="btn-group col-md-5" role="group" aria-label="Basic example">
                <button type="submit" style="display:none" class="btn btn-primary" id="Applybutton"><i class="fa fa-save"></i> Apply</button>
                <a href="~/ICPrices/ICPrice/Index" class="btn btn-primary"><i class="fa fa-times-circle"></i> Cancel</a>
            </div>
        </div>
    </div>
        }
        @section scripts
    {
            <script>
        //Customer Functions
        $("#Price").change(function () {

            var Price = $('#Price').val();
            var FundId = document.getElementById("FundId").value;
            $.ajax({

                type: "Post",
                url: '@servername/CheckPrice',
                //contentType: "application/x-www-form-urlencoded",
                data: { Price: Price, FundId: FundId },
                success: function (result) {


                    if (result.status == 0) {

                        var Apply = document.getElementById("Applybutton");
                        Apply.style.display = "none";
                        alert("Wrong ICprice Number for this Fund , Check Number and try Again");
                    }
                    else if (result.status == 1) {
                        var Apply = document.getElementById("Applybutton");
                        Apply.style.display = "block";
                    } else if (result.status == 2) {

                        var Apply = document.getElementById("Applybutton");
                        Apply.style.display = "none";
                        alert("Length After Dot in Price must be equal to ICprice Number ("+ result.ICpriceFund +") for this Fund");

                    }else if (result.status == 3) {
                        var Apply = document.getElementById("Applybutton");
                        Apply.style.display = "none";
                        alert("Price Must be Less than or equal to (" + result.Max + ") OR Greater than or equal to ("+result.Min+")");

                    }else if (result.status == 4) {
                        var Apply = document.getElementById("Applybutton");
                        Apply.style.display = "none";
                        alert("Tolerance Error !");

                    }

                   // if (result.status != 2) {

                   //    if (result.status == 1) {
                   //        debugger;
                   //        var Apply = document.getElementById("Applybutton");
                   //        Apply.style.display = "block";
                   //    }
                   //    else {

                   //        alert("Price is wrong for this fund Price Must Be Between " + result.Min + " And " + result.Max);
                   //        //$("#Applybutton").attr("disabled", "disabled");
                   //        var Apply = document.getElementById("Applybutton");
                   //        Apply.style.display = "none";
                   //    }
                   // } else {

                   //    alert("Tolerance Error !");
                   //    var Apply = document.getElementById("Applybutton");
                   //    Apply.style.display = "none";
                   //}
                }
            });
        });
            </script>
            <script>

        $(".grpdrpdwn").change(function () {
            debugger;
            var FundId = document.getElementById("FundId").value;

            $.ajax({
                type: "Post",
                url: '@servername/ICPrices/ICPrice/CheckDate', // the method we are calling
                contentType: "application/x-www-form-urlencoded",
                data: { FundId: FundId },//, 'Code': Code, 'GroupID': GroupID },
                //dataType: "json",
                success: function (result) {
                    debugger
                   // window.location.href = "/GroupsRights/GroupRight";
                    //New Ajax
                    //alert(result.Date);
                    //alert(result.ProcessDate);
                    //alert(result.ICDate);
                    if (result.success == false) {
                        alert(result.responseText);
                        document.getElementById("Date").value = "";
                        document.getElementById("PDate").value = "";
                    }
                    else {

                            document.getElementById("Date").value = result.ICDate;
                            document.getElementById("PDate").value = result.ProcessDate;

                    }


                    //end Ajax
                    //document.getElementById("Date").value = result.ICDate;
                    //document.getElementById("PDate").value = result.ProcessDate;
                },
                error: function (result) {
                    alert("Failed To Get Time");
                }
            });
        });

            </script>
        }
